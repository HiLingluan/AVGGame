-- des:{Lua辅助类}
-- author:{zpf}
-- date: 2021-04-15 14:09:35
Util = {}
--//----------------事件------------------
local CSEventMgr = CS.JMatrix.EventMgr.Ins

--TODO:需要重构 不需要再缓存一份Lua中使用的事件列表
--添加事件监听
function Util.AddCSEvent(key, action)
    CSEventMgr:AddEvent(key, action)
end

--删除事件监听
function Util.DelCSEvent(key, action)
    CSEventMgr:DelEvent(key, action)
end

--派发事件
function Util.CSDispatcher(key, param)
    CSEventMgr:Dispatcher(key, param)
end

--//-----------------定时器-----------------
--local Timer = CS.JMatrix.GameEntry.Timer
require("Utils.Timer")

--[[
    @desc: 延迟回调
    author:{zpf}
    time:2021-04-20 19:08:15
    --@time:延迟时间
	--@callBack:回调函数
	--@data: 回调参数
    @return:
]]
function Util.AddDelayCallBack(time, callBack, data)
    Timer:AddDelayCallBack(time, 1, callBack, data)
end

--[[
    @desc: 延迟一帧执行
    author:{zpf}
    time:2021-04-20 19:10:02
    --@callBack:回调函数
	--@data: 回调参数
    @return:
]]
function Util.AddDelayCallBackNextFrame(callBack, data)
    Timer:AddDelayCallBackNextFrame(callBack, data)
end

--[[
    @desc: 延迟回调
    author:{zpf}
    time:2021-04-20 19:06:31
    --@delayTime:延迟时间
	--@times:回调次数,-1为无限循环
	--@callBack:回调函数
	--@data: 回调参数
    @return:
]]
function Util.AddTimesDelayCallBack(delayTime, times, callBack, data)
    Timer:AddDelayCallBack(delayTime, times, callBack, data)
end
--[[
    @desc: 移除延迟事件监听
    author:{zpf}
    time:2021-05-15 10:35:40
    --@callBack:
    @return:
]]
function Util.RemoveDelayCallBack(callBack)
    Timer:RemoveDelayCallBack(callBack)
end

--//-------------------------------------------------------------------

--[[
    @desc: 计算文本TextMeshProUGUI在渲染后占的高度增量
    author:{zpf}
    time:2021-04-26 09:48:40
    --@textPro:textPro组件
	--@content:文本内容
	--@deltaHeight: 高度增量
    @return:
]]
function Util.GetTextDeltaHeight(textPro, content, deltaHeight)
    local info = CSUtil.GetTMPInfo(textPro, content)
    local delta = info.lineCount - 1
    return delta * deltaHeight
end

--[[
    @desc: 计算文本TextMeshProUGUI在渲染后占的宽度和高度
    author:{author}
    time:2021-05-08 16:10:35
    --@textPro:
	--@content:
	--@deltaHeight:每一行高度增量
	--@initWidth:  初始宽度
	--@characterWidth:每个字符宽度增量
	--@maxWidth: 最大宽度
    @return:
]]
function Util.GetTextHeightAndWidth(textPro, content, deltaHeight, initWidth, characterWidth, maxWidth)
    local info = CSUtil.GetTMPInfo(textPro, content)
    local delta = info.lineCount - 1
    local deltaHeight = delta * deltaHeight
    local strLength = CSUtil.GetStringASCLength(content)
    local width = initWidth + strLength * characterWidth
    if info.lineCount > 1 or width > maxWidth then
        width = maxWidth
    end
    return deltaHeight, width, info.lineCount
end

--获取文本组件实际高度
function Util.GetTMPHeight(textPro, content)
    local info = CSUtil.GetTMPInfo(textPro, content)
    local height = 0
    for i = 0, info.lineCount do
        height = height + info.lineInfo[i].lineHeight
    end
    return height
end

function Util.StrToTable(str)
    local array = CSUtil.Split(tostring(str), "_")
    local o = {}
    for i = 0, array.Length - 1 do
        table.insert(o, array[i])
    end
    return o
end
--[[
    @desc: 获取图片资源全路径
    author:{zpf}
    time:2021-07-02 10:51:50
    --@name:
	--@type:
	--@textureType:
    @return:
]]
function Util.GetTextureAssetFullPath(name, type, textureType)
    local headPath = Application.streamingAssetsPath
    local fullPath
    if type == EPropType.Texture then
        if textureType == Define.ETextureType.Jpg then
            fullPath = headPath .. "/texture/sceneBg/" .. name .. ".jpg"
        else
            fullPath = headPath .. "/texture/sceneBg/" .. name .. ".png"
        end
    else
        if textureType == Define.ETextureType.Jpg then
            fullPath = headPath .. "/texture/sceneui/" .. name .. ".jpg"
        else
            fullPath = headPath .. "/texture/sceneui/" .. name .. ".png"
        end
    end
    return fullPath
end

function Util.GetPropSprite(type, propID)
    local propConfig = CommonConfig:getPropOrCurrency(type, propID)
    if not propConfig then
        return nil, nil
    end

    local icon = propConfig.images
    if not icon then
        LogWarn("不存在图标=============type:" .. tostring(type) .. "=====id:" .. tostring(propID))
    end

    if not propConfig.quality then
        propConfig.quality = 1
    end
    local bg = ResMgr:loadSprite(Define.EAtlasType.Common, Define.PropQualityBg[propConfig.quality])
    local icon = ResMgr:loadSprite(Define.EAtlasType.Prop, icon)
    return bg, icon
end

--时间(秒)转成显示格式 小时：分钟：秒
function Util.SecondToTime(second)
    local tab = {}
    local hours = math.modf(second / 3600)
    local minutes = math.modf((second - hours * 3600) / 60)
    local seconds = second - hours * 3600 - minutes * 60

    if hours >= 10 then
        table.insert(tab, hours)
    else
        table.insert(tab, 0)
        table.insert(tab, hours)
    end
    table.insert(tab, ":")

    if minutes >= 10 then
        table.insert(tab, minutes)
    else
        table.insert(tab, 0)
        table.insert(tab, minutes)
    end
    table.insert(tab, ":")

    if seconds >= 10 then
        table.insert(tab, seconds)
    else
        table.insert(tab, 0)
        table.insert(tab, seconds)
    end
    return table.concat(tab)
end

--table是不是空表
function Util.IsNullTable(tb)
    if tb == nil then
        return true
    end
    for k, v in pairs(tb) do
        return false
    end
    return true
end

--table是否有值
function Util.IsTableHaveValue(tab)
    return not Util.IsNullTable(tab)
end

---table 长度
function Util.TableLength(tb)
    local i = 0
    if tb == nil then
        return i;
    end
    for value, key in pairs(tb) do
        i = i + 1
    end
    return i
end

---键值table 排序 目前支持键值为数字字符串 转化为index table
function Util.KeyTableSortToIndexTable(tb)
    if tb == nil then
        return tb;
    end
    local result = {}
    local keys = {}
    for k, v in pairs(tb) do
        table.insert(keys, k)
    end
    table.sort(keys, function(a, b)
        return tonumber(a) < tonumber(b)
    end)
    for i, v in ipairs(keys) do
        table.insert(result, tb[v])
    end
    return result
end

--表中是否存在相同Key
function Util.IsSameKey(tb, key)
    for k, v in pairs(tb) do
        if k == key then
            return true
        end
    end
    return false
end

--数字转换为显示
function Util.ConvertNumToStr(num)
    if num < 10 then
        return "0" .. tostring(num)
    else
        return tostring(num)
    end
end

--时间(秒)转成天数
function Util.SecondToDay(second)
    local days = math.modf(second / 86400)
    return days
end

--时间(秒)转成小时数
function Util.SecondToHour(second)
    local hours = math.modf(second / 3600)
    return hours
end

--时间(秒)转成分钟数
function Util.SecondToMinute(second)
    local minutes = math.modf(second / 60)
    return minutes
end

--千分位数字
--@num 需要转化的数字
function Util.formatnumberthousands(num)
    local function checknumber(value)
        return tonumber(value) or 0
    end
    local formatted = tostring(checknumber(num))
    local k
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if k == 0 then
            break
        end
    end
    return formatted
end

--货币数量显示转换
function Util.GetFormatNumStr(targetNum)
    if not targetNum then
        FLog("数字转换失败,不能为空!")
        return "0"
    end

    local num = tonumber(targetNum)
    if not num then
        print(string.format("Error: %s is a fault input !!!", targetNum))
        return targetNum
    end

    -- 英文区显示
    if math.abs(num) >= 10 ^ 9 then
        if num % 10 ^ 9 == 0 then
            return tostring(num / 10 ^ 9) .. "B"
        else
            local transNum = math.modf(num / 10 ^ 8)
            return tostring(transNum / 10) .. "B"
        end
    elseif math.abs(num) >= 10 ^ 6 then
        if num % 10 ^ 6 == 0 then
            return tostring(num / 10 ^ 6) .. "M"
        else
            local transNum = math.modf(num / 10 ^ 5)
            return tostring(transNum / 10) .. "M"
        end
    elseif math.abs(num) >= 10 ^ 3 then
        if num % 10 ^ 3 == 0 then
            return tostring(num / 10 ^ 3) .. "K"
        else
            local transNum = math.modf(num / 100)
            return tostring(transNum / 10) .. "K"
        end
    else
        if num % 1 == 0 then
            return tostring(num)
        else
            local transNum = math.modf(num * 100)
            return tostring(transNum / 100)
        end
    end
end

--时间戳转显示
function Util.timeFormat(time)
    if time <= 0 then
        return "00:00:00"
    end
    local d = math.modf(time / 86400)
    local h = math.modf((time - d * 86400) / 3600)
    local tempTime = (time - d * 86400) % 3600
    local m = math.modf(tempTime / 60)
    local s = tempTime % 60
    local result
    if d < 1 then
        result = string.format("%02d:%02d:%02d", h, m, s)
    else
        result = string.format("%sd %02d:%02d:%02d", d, h, m, s)
    end
    return result
end

--[[
    @desc: 拆分奖励
    author:{author}
    time:2021-12-01 19:44:23
    list: 奖励列表
    @return: 原奖励，分解奖励
]]
function Util.splitReward(list)
    local deconposeReward = {} --分解奖励
    --分解是nil  数量是0
    if list.compose_number == nil or list.compose_number == 0 then
        return list, deconposeReward
    end

    local sourceReward = {} --原奖励
    --原奖励是nil  数量是0
    if list.total_number - list.compose_number <= 0 then
        deconposeReward = list
        return sourceReward, deconposeReward
    end
    sourceReward.type = list.type
    sourceReward.prop_id = list.prop_id
    sourceReward.number = list.total_number - list.compose_number
    sourceReward.cur_number = list.cur_number

    deconposeReward = list
    -- deconposeReward.type = list.type
    -- deconposeReward.prop_id = list.prop_id
    -- deconposeReward.compose_prop_type = list.compose_prop_type
    -- deconposeReward.compose_prop_id = list.compose_prop_id
    -- deconposeReward.compose_prop_number = list.compose_prop_number
    -- deconposeReward.compose_prop_cur_number = list.compose_prop_cur_number
    -- deconposeReward.compose_number = list.compose_number

    return sourceReward, deconposeReward
end

--[[
    @desc: 货币/道具不足处理
    author:{lxq}
    time:2022-1-24
    prop_type: 物品类型 
    prop_id：物品id
    @return: nil
]]
function Util.propNotEnough(prop_type, prop_id, prop_name)
    ViewMgr:CloseWindow(EWindowType.ShopBatchConvertPanel)
    ViewMgr:CloseWindow(EWindowType.QuickBuyWindow)
    if prop_type == Define.EUserDataType.Currency and prop_id == Define.ECurrencyType.Diamond then
        CommonTools.ShowCommonMsgBox(CommonConfig:getLanguage("lag_tips"), CommonConfig:getLanguage("lag_diamond_not_enough") .. ", " .. CommonConfig:getLanguage("lag_top_up"),
                function()
                    Util.isShopUnlock()
                end,
                CommonConfig:getLanguage("lag_confirm"),
                function()

                end,
                CommonConfig:getLanguage("lag_cancel"), 4)
    else
        CommonTools.ShowCommonMsgTip(prop_name .. CommonConfig:getLanguage("lag_not_enough"))
    end
end

--[[
    @desc: 判断商城是否解锁
    author:{lxq}
    time:2022-1-24
    @return: nil
]]
function Util.isShopUnlock(callback)
    local isUnlock = ServiceMgr:GetService(EServiceType.FunctionOpen):isFuncUnLock(Define.EFuncType.Shop)
    if isUnlock then
        EventMgr.Dispatcher(LuaEventKey.AGE_SET)
    else
        CommonTools.ShowCommonMsgTip(CommonConfig:getLanguage("function_open/describe/1009"))
        --未解锁回调
        if callback then
            callback()
        end
    end
end

--[[
    @desc: 返回商品的具体类型
    author:{lxq}
    time:2022-1-24
    type: 物品类型 
    prop_id：物品id
    @return: function_type
]]
function Util.getPropFuncType(type, prop_id)
    if not type then
        return 2
    end
    if tonumber(type) == 2 then
        return 2
    else
        local propData = CommonConfig:getProp(prop_id)
        return propData.function_type
    end
end
--[[
    @desc: 获取时间组成的table表   （ 天 小时  分钟  秒）
    author:{wlh}
    time:2022-03-29 15:03:50
    @return:
]]
function Util:getTimeTab(second)
    local tab = {}
    local day = math.modf(second / 86400)
    local hours = math.modf((second - day * 86400) / 3600)
    local minutes = math.modf((second - day * 86400 - hours * 3600) / 60)
    local seconds = second - day * 86400 - hours * 3600 - minutes * 60

    local d = tostring(day)
    table.insert(tab, d)
    local h = hours >= 10 and tostring(hours) or "0" .. tostring(hours)
    table.insert(tab, h)
    local m = minutes >= 10 and tostring(minutes) or "0" .. tostring(minutes)
    table.insert(tab, m)
    local s = seconds >= 10 and tostring(seconds) or "0" .. tostring(seconds)
    table.insert(tab, s)
    return tab
end
--[[
    @desc: 获取时间组成的table表   （小时  分钟  秒）
    author:{wlh}
    time:2022-03-29 15:03:50
    @return:
]]
function Util:getTimeTab2(second)
    local tab = {}
    local day = 0
    local hours = math.modf((second - day * 86400) / 3600)
    local minutes = math.modf((second - day * 86400 - hours * 3600) / 60)
    local seconds = second - day * 86400 - hours * 3600 - minutes * 60

    local d = tostring(day)
    table.insert(tab, d)
    local h = hours >= 10 and tostring(hours) or "0" .. tostring(hours)
    table.insert(tab, h)
    local m = minutes >= 10 and tostring(minutes) or "0" .. tostring(minutes)
    table.insert(tab, m)
    local s = seconds >= 10 and tostring(seconds) or "0" .. tostring(seconds)
    table.insert(tab, s)
    return tab
end

--[[
    @desc: 获取时间组成的table表   （ 天 小时  分钟  秒）
    author:{wlh}
    time:2022-03-29 15:03:50
    @return:
]]
function Util:getTimeTab3(second)
    local tab = ""
    local day = math.modf(second / 86400)
    local hours = math.modf((second - day * 86400) / 3600)
    local minutes = math.modf((second - day * 86400 - hours * 3600) / 60)
    local seconds = second - day * 86400 - hours * 3600 - minutes * 60
    if day > 0 then
        tab = tab..day.."d"
    end
    if hours > 0 then
        tab = tab..hours.."h"
    end
    if minutes > 0 then
        tab = tab..minutes.."m"
    end
    if minutes > 0 then
        tab = tab..seconds.."s"
    end
    return tab
end

function Util.setCSStoryData(setData)
    if not setData then return end
    CS.JMatrix.LuaDataProxy.storyID = setData.storyID
    CS.JMatrix.LuaDataProxy.chapterID = setData.chapterID
    CS.JMatrix.LuaDataProxy.setID = setData.setID
    CS.JMatrix.LuaDataProxy.gameLevelID = setData.id
end

function Util.setCSDateData(setData)
    if not setData then return end
    CS.JMatrix.LuaDataProxy.storyID = setData.storyID
    CS.JMatrix.LuaDataProxy.chapterID = setData.chapterID
    CS.JMatrix.LuaDataProxy.setID = setData.setID
    CS.JMatrix.LuaDataProxy.gameLevelID = setData.id
end

----------------------------------------------------------------------------------------------------------------
---这里是对string的扩展
function string.isNilOrEmpty(str)
    if str == nil then
        return true
    end
    if str then
        if #string.trim(str) == 0 then
            return true
        end
    end
    return false;
end

function urlEncode(s)
    s = string.gsub(s, "([^%w%.%- ])", function(c)
        return string.format("%%%02X", string.byte(c)) end)
    return string.gsub(s, " ", "+")
end

function urlDecode(s)
    s = string.gsub(s, '%%(%x%x)', function(h)
        return string.char(tonumber(h, 16)) end)
    return s
end

---------------------------------------------------------------------------------------------------------------------------
--- 把一些全局的方法写在这里
--- DateTime: 2022/4/27 11:22
---
---主要作用是把function封装一层,有些不便于实现的地方,比如CSEvent那边
---
function handler(obj, method, param)
    if param then
        -- 这里会有gc，小心使用
        return function(...)
            local args = { ... }
            if not table.isempty(args) then
                if param then
                    table.insert(args, param)
                    return method(obj, table.unpack(args))
                end
                return method(obj, ...)
            end
            return method(obj, param)
        end
    else
        return function(...)
            return method(obj, ...)
        end
    end
end

function Util.SetSpriteByID(imageProxy, ID)
    if ID == nil then
        Log("SetTextureByID ID is nil")
        return
    end
    imageProxy.sprite = HttpMgr.curCDN .. tostring(CommonConfig:getResPath(ID))
end

function Util.SetTextureByID(rawImageProxy, ID)
    if ID == nil then
        Log("SetTextureByID ID is nil")
        return
    end
    rawImageProxy.texture = HttpMgr.curCDN .. tostring(CommonConfig:getResPath(ID))
end

--设置玩家头像和头像框
function Util.SetHeadAndFrame(headImage, frameImage)
    local userDataService = ServiceMgr:GetService(EServiceType.UserData)
    if headImage then
        headImage.sprite = ResMgr:loadSprite(Define.EAtlasType.HeadIcon, userDataService:getAvatar())
    end
    if frameImage then
        frameImage.sprite = ResMgr:loadSprite(Define.EAtlasType.HeadFrame, userDataService:getAvatarFrame())
    end
end

--[[
    @desc: 根据资源id获取资源全路径
    author:{zpf}
    time:2022-06-17 10:20:13
    --@id:  type (string)
    @return:
]]
function Util.GetAssetLocalPath(id)
    local path = HttpMgr.curCDN .. tostring(CommonConfig:getResPath(id))
    return path
end

-----------------------↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓------------------声音相关------------------↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓----------------------
--播放音效
function Util.playAudio(id)
    local audio = CommonConfig:getMusic(id)
    if audio then
        local asset = Util.getSoundAssets(tostring(audio.res_id))
        -- ZLog(">PlaySound>>>>>>>>>>>>>>>>>>>>>" .. tostring(asset))
        GameEntry.Sound:PlayUISound(asset)
    else
        ZLog("不存在音效：" .. tostring(id))
    end
end
--播放BGM
function Util.PlayBGM(id)
    local music = CommonConfig:getMusic(id)
    if music then
        local asset = Util.getMusicAssets(tostring(music.res_id))
        -- ZLog(">PlayMusic>>>>>>>>>>>>>>>>>>>>>" .. tostring(asset))
        GameEntry.Sound:PlayMusic(asset)
    else
        ZLog("不存在音乐：" .. tostring(id))
    end
end

--播放音效
function Util.playAudioToName(name)
    local asset = Util.getSoundAssets(name)
    -- ZLog(">PlaySound>>>>>>>>>>>>>>>>>>>>>" .. tostring(asset))
    return  GameEntry.Sound:PlayUISound(asset)
end

--暂停音效
function Util.stopSound(serialId)
    GameEntry.Sound:StopSound(serialId)
end

function Util.stopBGM()
    CSUtil.StopBGM()
end

function Util.getSoundAssets(assetName)
    return string.format("Assets/GameMain/Res/Build/Sounds/%s.mp3", assetName)
end

function Util.getMusicAssets(assetName)
    return string.format("Assets/GameMain/Res/Build/Music/%s.mp3", assetName)
end

--获取本地公共配置文本资源全路径
function Util.getCommonTextConfigAssets(assetName)
    return string.format("Assets/GameMain/Scripts/Lua/CommonConfig/%s.txt", assetName)
end

--切换语言接口
function Util.changeLanguage(language)
    local languagePath = Util.getLanguageConfigAssets(language)
    local languageText = CommonTools.LoadTextRes(languagePath)
    local languageTab = rapidjson.decode(languageText)
    CommonConfig:addLanguage(languageText)
    CSUtil.SetLanguageByCode(language)
    --CMSStat.setAppLanguage(language)
end

--获取多语言配置
function Util.getLanguageConfigAssets(lan)
    local languageFileName
    if lan == Define.LanguageCode.SimpleChinese then
        languageFileName = "language_zh-CN"
    elseif lan == Define.LanguageCode.English then
        languageFileName = "language_en"
    elseif lan == Define.LanguageCode.Japanese then
        languageFileName = "language_ja-JP"
    end
    return string.format("Assets/GameMain/Scripts/Lua/CommonConfig/%s.txt", languageFileName)
end

--跳转集
function Util.GotoSet(setData)
    Util.setCSStoryData(setData)
    ServiceMgr:GetService(EServiceType.StoryDataService):setStorySetData(setData)

    local storyDataService = ServiceMgr:GetService(EServiceType.StoryDataService)
    local roleLine = storyDataService:getCurRoleLine()

    if setData.set_type == Define.EStorySetType.Read then
        GameProcedureMgr:changeProcedure(Define.EGameProcedure.Read)
        CMSStat.mainLevelClick(1);
    elseif setData.set_type == Define.EStorySetType.Foot then
        ViewMgr:OpenWindow(EWindowType.FootDetail, nil, setData)
    elseif setData.set_type == Define.EStorySetType.FightBoss or setData.set_type == Define.EStorySetType.FightNormal then
        if roleLine.id == Define.EActivityEnum.OZBirthday then
            ViewMgr:OpenWindow(EWindowType.LimitActivityFightSetDetail, nil, setData)
        elseif roleLine.id == Define.EActivityEnum.StarDance then
            ViewMgr:OpenWindow(EWindowType.LimitActivityFightSetDetail, nil, setData)
        else
            ViewMgr:OpenWindow(EWindowType.FightSetDetail, nil, setData)
        end
    elseif setData.set_type == Define.EStorySetType.TowerBoss or setData.set_type == Define.EStorySetType.TowerNormal then
        ViewMgr:OpenWindow(EWindowType.TowerSetDetail, nil, setData)
    end
end

--时间(秒)转成显示格式 小时：分钟：秒
function Util.SecondToDHMSTime(second)
    local tab = {}
    local days = math.modf(second / 86400)
    local hours = math.modf((second - days * 86400) / 3600)
    local minutes = math.modf((second - days * 86400 - hours * 3600) / 60)
    local seconds = second - days * 86400 - hours * 3600 - minutes * 60
    if days > 0 then
        table.insert(tab, days)
        table.insert(tab, "d:")
    end

    if hours >= 10 then
        table.insert(tab, hours)
    else
        table.insert(tab, hours)
    end
    table.insert(tab, "h:")

    if minutes >= 10 then
        table.insert(tab, minutes)
    else
        table.insert(tab, 0)
        table.insert(tab, minutes)
    end
    table.insert(tab, "m:")

    if seconds >= 10 then
        table.insert(tab, seconds)
    else
        table.insert(tab, 0)
        table.insert(tab, seconds)
    end
    table.insert(tab, "s")
    return table.concat(tab)
end

--时间(秒)转成显示格式 小时：分钟：秒
function Util.SecondToShortTime(second)
    if second <= 0 then
        LogWarn("异常的时间转换!")
        return ""
    end

    local tab = {}
    local days = math.modf(second / 86400)
    local hours = math.modf((second - days * 86400) / 3600)
    local minutes = math.modf((second - days * 86400 - hours * 3600) / 60)
    local seconds = second - days * 86400 - hours * 3600 - minutes * 60
    if days > 0 then
        return tostring(days) .. "d"
    end
    if hours > 0 then
        return tostring(hours) .. "h"
    end
    if minutes > 0 then
        return tostring(minutes) .. "m"
    end
    if seconds > 0 then
        return tostring(seconds) .. "s"
    end
end

function Util.getTimeShow(second)
    if second <= 0 then
        return ""
    end

    local tab = {}
    local day = math.modf(second / 86400)
    local hours = math.modf((second - day * 86400) / 3600)
    local minutes = math.modf((second - day * 86400 - hours * 3600) / 60)
    local seconds = second - day * 86400 - hours * 3600 - minutes * 60
    if day > 0 then
        return CommonConfig:getLanguage("lag_limited_44", day)
    end
    if hours > 0 then
        return CommonConfig:getLanguage("lag_limited_45", hours)
    end
    if minutes > 0 then
        return CommonConfig:getLanguage("lag_limited_46", minutes)
    end
    return CommonConfig:getLanguage("lag_limited_47")
end

--获取电话短信等待输入时间
function Util.GetPhoneMesWaitInputTime(content)
    local contentLength = string.len(content)
    local waitTime
    if contentLength < 40 then
        waitTime = 0.667 * 2
    else
        waitTime = 0.667 * 3
    end
    return waitTime
end

---通过当前配置的头像名字，获取到另外的好看的头像
function Util.GetOtherRoleHead(head_name)
    if head_name == "head_alistar" then
        return "head_14007_2"
    elseif head_name == "head_Jax" then
        return "head_13007_2"
    elseif head_name == "head_leonis" then
        return "head_10006_1"
    elseif head_name == "head_Oz" then
        return "head_12007_2"
    elseif head_name == "head_Victor" then
        return "head_11007_1"
    elseif head_name == "head_Titus" then
        return "head_Titus"
    end
end

--获取距离现在的时间显示
function Util.getFromNowTimeShow(leftTime)
    local timespan = CS.JMatrix.DateTimeUtil.NowTimeToTimeStamp() - leftTime
    local days = Util.SecondToDay(timespan)
    local hours = Util.SecondToHour(timespan)
    local minutes = Util.SecondToMinute(timespan)
    if days>0 then
        return CommonConfig:getLanguage("lag_day_ago", tostring(days))
    elseif hours>0 then
        return CommonConfig:getLanguage("lag_hour_ago", tostring(hours)) 
    elseif minutes>0 then
        return CommonConfig:getLanguage("lag_min_ago", tostring(minutes))  
    else
        return CommonConfig:getLanguage("lag_email_des_08")  
    end
end


function Util.showReward(reward_list)
    local cardReward = {}   --卡牌奖励
    local otherReward = {}  --其他奖励
    for i,v in ipairs(reward_list) do
        if not v.prop_type then
            v.prop_type = v.type
        end
        local propInfo = CommonConfig:getPropOrCurrency(v.prop_type,v.prop_id)
        if propInfo then
            --卡牌道具
            if propInfo.function_type == 10 then
                v.card_id = tonumber(propInfo.function_param[1].param)
                table.insert( cardReward, v )
            else
                table.insert( otherReward, v )
            end
        end
    end
    
    --普通奖励
    local rewardFunction = function()
        EventMgr.Dispatcher(LuaEventKey.OPEN_PROP_REWARDTIPS,otherReward)
    end
    if not Util.IsNullTable(cardReward) then
        --卡牌奖励领取结束
        local cardFinish = function()
            if not Util.IsNullTable(otherReward) then
                rewardFunction()
            else
                ServiceMgr:GetService(EServiceType.RewardTips).isHaveReward = false
            end
        end
        for i, v in pairs(cardReward) do
            ServiceMgr:GetService(EServiceType.CardSystem):updateCardData(v.card_id);
        end
        ViewMgr:OpenWindow(EWindowType.CardLotteryNewWindow,nil,{lotteryCount = 1,isLotteryShow = false, cardReward = cardReward, rewardFinish = cardFinish})
    else
        if not Util.IsNullTable(otherReward) then
            rewardFunction()
        end
    end
end

function Util.openSetDetail(data)
    if data.set_type == Define.EStorySetType.FightBoss or data.set_type == Define.EStorySetType.FightNormal then
        local storyDataService = ServiceMgr:GetService(EServiceType.StoryDataService)
        local roleLine = storyDataService:getCurRoleLine()
        if roleLine.id == Define.EActivityEnum.OZBirthday then
            ViewMgr:OpenWindow(EWindowType.LimitActivityFightSetDetail, nil, data)
        elseif roleLine.id == Define.EActivityEnum.StarDance then
            ViewMgr:OpenWindow(EWindowType.LimitActivityFightSetDetail, nil, data)
        elseif roleLine.id == Define.EActivityEnum.Joker then
            ViewMgr:OpenWindow(EWindowType.LimitActivityFightSetDetail, nil, data)
        else
            ViewMgr:OpenWindow(EWindowType.FightSetDetail, nil, data)
        end
    elseif data.set_type == Define.EStorySetType.TowerBoss or data.set_type == Define.EStorySetType.TowerNormal then
        ViewMgr:OpenWindow(EWindowType.TowerSetDetail, nil, data)
    end
    
end

-----------------------↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑-----------------------------------↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑----------------------
