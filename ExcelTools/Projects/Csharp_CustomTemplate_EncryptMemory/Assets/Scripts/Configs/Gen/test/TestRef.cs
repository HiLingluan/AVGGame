
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Newtonsoft.Json;
using Scripts;







namespace cfg.test
{
    [Serializable]
    public partial class TestRef : AConfig
    {

        [JsonProperty("x1")]
        private int _x1 { get; set; }
        [JsonIgnore]
        public EncryptInt x1 { get; private set; } = new();

        [JsonProperty("x1_2")]
        private int _x1_2 { get; set; }
        [JsonIgnore]
        public EncryptInt x1_2 { get; private set; } = new();

        [JsonProperty("x2")]
        private int _x2 { get; set; }
        [JsonIgnore]
        public EncryptInt x2 { get; private set; } = new();

        public int[]  a1 { get; set; }

        public int[]  a2 { get; set; }

        public System.Collections.Generic.List<int>  b1 { get; set; }

        public System.Collections.Generic.List<int>  b2 { get; set; }

        public System.Collections.Generic.HashSet<int>  c1 { get; set; }

        public System.Collections.Generic.HashSet<int>  c2 { get; set; }

        public System.Collections.Generic.Dictionary<int, int>  d1 { get; set; }

        public System.Collections.Generic.Dictionary<int, int>  d2 { get; set; }

        [JsonProperty("e1")]
        private int _e1 { get; set; }
        [JsonIgnore]
        public EncryptInt e1 { get; private set; } = new();

        [JsonProperty("e2")]
        private long _e2 { get; set; }
        [JsonIgnore]
        public EncryptLong e2 { get; private set; } = new();

        public string  e3 { get; set; }

        [JsonProperty("f1")]
        private int _f1 { get; set; }
        [JsonIgnore]
        public EncryptInt f1 { get; private set; } = new();

        [JsonProperty("f2")]
        private long _f2 { get; set; }
        [JsonIgnore]
        public EncryptLong f2 { get; private set; } = new();

        public string  f3 { get; set; }


        public override void EndInit() 
        {
            x1 = _x1;
            x1_2 = _x1_2;
            x2 = _x2;
            e1 = _e1;
            e2 = _e2;
            f1 = _f1;
            f2 = _f2;
        }

        public override string ToString() => JsonConvert.SerializeObject(this);
    }
}
