
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg.ai;

import bright.serialization.*;



public abstract class Decorator extends cfg.ai.Node {
    public Decorator(ByteBuf _buf) { 
        super(_buf);
        flowAbortMode = cfg.ai.EFlowAbortMode.valueOf(_buf.readInt());
    }

    public Decorator(int id, String node_name, cfg.ai.EFlowAbortMode flow_abort_mode ) {
        super(id, node_name);
        this.flowAbortMode = flow_abort_mode;
    }

    public static Decorator deserializeDecorator(ByteBuf _buf) {
        switch (_buf.readInt()) {
            case cfg.ai.UeLoop.__ID__: return new cfg.ai.UeLoop(_buf);
            case cfg.ai.UeCooldown.__ID__: return new cfg.ai.UeCooldown(_buf);
            case cfg.ai.UeTimeLimit.__ID__: return new cfg.ai.UeTimeLimit(_buf);
            case cfg.ai.UeBlackboard.__ID__: return new cfg.ai.UeBlackboard(_buf);
            case cfg.ai.UeForceSuccess.__ID__: return new cfg.ai.UeForceSuccess(_buf);
            case cfg.ai.IsAtLocation.__ID__: return new cfg.ai.IsAtLocation(_buf);
            case cfg.ai.DistanceLessThan.__ID__: return new cfg.ai.DistanceLessThan(_buf);
            default: throw new SerializationException();
        }
    }

    public final cfg.ai.EFlowAbortMode flowAbortMode;


    @Override
    public void resolve(java.util.HashMap<String, Object> _tables) {
        super.resolve(_tables);
    }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "nodeName:" + nodeName + ","
        + "flowAbortMode:" + flowAbortMode + ","
        + "}";
    }
}
