//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg.ai;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;



public abstract class Node {
    public Node(JsonObject __json__) { 
        id = __json__.get("id").getAsInt();
        nodeName = __json__.get("node_name").getAsString();
    }

    public Node(int id, String node_name ) {
        this.id = id;
        this.nodeName = node_name;
    }

    public static Node deserializeNode(JsonObject __json__) {
        switch (__json__.get("__type__").getAsString()) {
            case "UeSetDefaultFocus": return new cfg.ai.UeSetDefaultFocus(__json__);
            case "ExecuteTimeStatistic": return new cfg.ai.ExecuteTimeStatistic(__json__);
            case "ChooseTarget": return new cfg.ai.ChooseTarget(__json__);
            case "KeepFaceTarget": return new cfg.ai.KeepFaceTarget(__json__);
            case "GetOwnerPlayer": return new cfg.ai.GetOwnerPlayer(__json__);
            case "UpdateDailyBehaviorProps": return new cfg.ai.UpdateDailyBehaviorProps(__json__);
            case "UeLoop": return new cfg.ai.UeLoop(__json__);
            case "UeCooldown": return new cfg.ai.UeCooldown(__json__);
            case "UeTimeLimit": return new cfg.ai.UeTimeLimit(__json__);
            case "UeBlackboard": return new cfg.ai.UeBlackboard(__json__);
            case "UeForceSuccess": return new cfg.ai.UeForceSuccess(__json__);
            case "IsAtLocation": return new cfg.ai.IsAtLocation(__json__);
            case "DistanceLessThan": return new cfg.ai.DistanceLessThan(__json__);
            case "Sequence": return new cfg.ai.Sequence(__json__);
            case "Selector": return new cfg.ai.Selector(__json__);
            case "SimpleParallel": return new cfg.ai.SimpleParallel(__json__);
            case "UeWait": return new cfg.ai.UeWait(__json__);
            case "UeWaitBlackboardTime": return new cfg.ai.UeWaitBlackboardTime(__json__);
            case "MoveToTarget": return new cfg.ai.MoveToTarget(__json__);
            case "ChooseSkill": return new cfg.ai.ChooseSkill(__json__);
            case "MoveToRandomLocation": return new cfg.ai.MoveToRandomLocation(__json__);
            case "MoveToLocation": return new cfg.ai.MoveToLocation(__json__);
            case "DebugPrint": return new cfg.ai.DebugPrint(__json__);
            default: throw new bright.serialization.SerializationException();
        }
    }

    public final int id;
    public final String nodeName;

    public abstract int getTypeId();

    public void resolve(java.util.HashMap<String, Object> _tables) {
    }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "nodeName:" + nodeName + ","
        + "}";
    }
}
