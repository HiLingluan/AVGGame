
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type BlueprintNormalClazz struct {
    Name string
    Desc string
    Parents []interface{}
    Methods []interface{}
    IsAbstract bool
    Fields []*BlueprintField
}

const TypeId_BlueprintNormalClazz = -2073576778

func (*BlueprintNormalClazz) GetTypeId() int32 {
    return -2073576778
}

func (_v *BlueprintNormalClazz)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *BlueprintNormalClazz)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.Name, err = _buf.ReadString(); err != nil { err = errors.New("_v.Name error"); return } }
    { if _v.Desc, err = _buf.ReadString(); err != nil { err = errors.New("_v.Desc error"); return } }
    {_v.Parents = make([]interface{}, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.Parents error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ interface{}; { if _e_, err = DeserializeBlueprintClazz(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.Parents = append(_v.Parents, _e_) } }
    {_v.Methods = make([]interface{}, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.Methods error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ interface{}; { if _e_, err = DeserializeBlueprintMethod(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.Methods = append(_v.Methods, _e_) } }
    { if _v.IsAbstract, err = _buf.ReadBool(); err != nil { err = errors.New("_v.IsAbstract error"); err = errors.New("_v.IsAbstract error"); return } }
    {_v.Fields = make([]*BlueprintField, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.Fields error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ *BlueprintField; { if _e_, err = DeserializeBlueprintField(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.Fields = append(_v.Fields, _e_) } }
    return
}

func DeserializeBlueprintNormalClazz(_buf *serialization.ByteBuf) (*BlueprintNormalClazz, error) {
    v := &BlueprintNormalClazz{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
