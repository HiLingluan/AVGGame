
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type TestTestSep struct {
    Id int32
    X1 string
    X2 *TestSepBean1
    X3 *TestSepVector
    X4 []*TestSepVector
    X5 []*TestSepBean1
    X6 []*TestSepBean1
}

const TypeId_TestTestSep = -543221520

func (*TestTestSep) GetTypeId() int32 {
    return -543221520
}

func (_v *TestTestSep)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *TestTestSep)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.Id, err = _buf.ReadInt(); err != nil { err = errors.New("_v.Id error"); return } }
    { if _, err = _buf.ReadString(); err != nil { return }; if _v.X1, err = _buf.ReadString(); err != nil { err = errors.New("_v.X1 error"); return } }
    { if _v.X2, err = DeserializeTestSepBean1(_buf); err != nil { err = errors.New("_v.X2 error"); return } }
    { if _v.X3, err = DeserializeTestSepVector(_buf); err != nil { err = errors.New("_v.X3 error"); return } }
    {_v.X4 = make([]*TestSepVector, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.X4 error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ *TestSepVector; { if _e_, err = DeserializeTestSepVector(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.X4 = append(_v.X4, _e_) } }
    {_v.X5 = make([]*TestSepBean1, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.X5 error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ *TestSepBean1; { if _e_, err = DeserializeTestSepBean1(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.X5 = append(_v.X5, _e_) } }
    {_v.X6 = make([]*TestSepBean1, 0); var _n_ int; if _n_, err = _buf.ReadSize(); err != nil { err = errors.New("_v.X6 error"); return}; for i := 0 ; i < _n_ ; i++ { var _e_ *TestSepBean1; { if _e_, err = DeserializeTestSepBean1(_buf); err != nil { err = errors.New("_e_ error"); return } }; _v.X6 = append(_v.X6, _e_) } }
    return
}

func DeserializeTestTestSep(_buf *serialization.ByteBuf) (*TestTestSep, error) {
    v := &TestTestSep{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
