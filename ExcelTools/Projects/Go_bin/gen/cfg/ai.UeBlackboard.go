
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type AiUeBlackboard struct {
    Id int32
    NodeName string
    FlowAbortMode int32
    NotifyObserver int32
    BlackboardKey string
    KeyQuery interface{}
}

const TypeId_AiUeBlackboard = -315297507

func (*AiUeBlackboard) GetTypeId() int32 {
    return -315297507
}

func (_v *AiUeBlackboard)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *AiUeBlackboard)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.Id, err = _buf.ReadInt(); err != nil { err = errors.New("_v.Id error"); return } }
    { if _v.NodeName, err = _buf.ReadString(); err != nil { err = errors.New("_v.NodeName error"); return } }
    { if _v.FlowAbortMode, err = _buf.ReadInt(); err != nil { err = errors.New("_v.FlowAbortMode error"); return } }
    { if _v.NotifyObserver, err = _buf.ReadInt(); err != nil { err = errors.New("_v.NotifyObserver error"); return } }
    { if _v.BlackboardKey, err = _buf.ReadString(); err != nil { err = errors.New("_v.BlackboardKey error"); return } }
    { if _v.KeyQuery, err = DeserializeAiKeyQueryOperator(_buf); err != nil { err = errors.New("_v.KeyQuery error"); return } }
    return
}

func DeserializeAiUeBlackboard(_buf *serialization.ByteBuf) (*AiUeBlackboard, error) {
    v := &AiUeBlackboard{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
