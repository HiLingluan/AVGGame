
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type TestSepVector struct {
    X int32
    Y int32
    Z int32
}

const TypeId_TestSepVector = 252769477

func (*TestSepVector) GetTypeId() int32 {
    return 252769477
}

func (_v *TestSepVector)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *TestSepVector)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.X, err = _buf.ReadInt(); err != nil { err = errors.New("_v.X error"); return } }
    { if _v.Y, err = _buf.ReadInt(); err != nil { err = errors.New("_v.Y error"); return } }
    { if _v.Z, err = _buf.ReadInt(); err != nil { err = errors.New("_v.Z error"); return } }
    return
}

func DeserializeTestSepVector(_buf *serialization.ByteBuf) (*TestSepVector, error) {
    v := &TestSepVector{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
