
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type TestColor struct {
    R float32
    G float32
    B float32
    A float32
}

const TypeId_TestColor = 623131367

func (*TestColor) GetTypeId() int32 {
    return 623131367
}

func (_v *TestColor)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *TestColor)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.R, err = _buf.ReadFloat(); err != nil { err = errors.New("_v.R error"); return } }
    { if _v.G, err = _buf.ReadFloat(); err != nil { err = errors.New("_v.G error"); return } }
    { if _v.B, err = _buf.ReadFloat(); err != nil { err = errors.New("_v.B error"); return } }
    { if _v.A, err = _buf.ReadFloat(); err != nil { err = errors.New("_v.A error"); return } }
    return
}

func DeserializeTestColor(_buf *serialization.ByteBuf) (*TestColor, error) {
    v := &TestColor{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
