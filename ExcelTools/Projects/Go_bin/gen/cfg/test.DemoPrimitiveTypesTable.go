
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type TestDemoPrimitiveTypesTable struct {
    X1 bool
    X2 byte
    X3 int16
    X4 int32
    X5 int64
    X6 float32
    X7 float64
    S1 string
    S2 string
    V2 serialization.Vector2
    V3 serialization.Vector3
    V4 serialization.Vector4
    T1 int32
}

const TypeId_TestDemoPrimitiveTypesTable = -370934083

func (*TestDemoPrimitiveTypesTable) GetTypeId() int32 {
    return -370934083
}

func (_v *TestDemoPrimitiveTypesTable)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *TestDemoPrimitiveTypesTable)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.X1, err = _buf.ReadBool(); err != nil { err = errors.New("_v.X1 error"); err = errors.New("_v.X1 error"); return } }
    { if _v.X2, err = _buf.ReadByte(); err != nil { err = errors.New("_v.X2 error"); return } }
    { if _v.X3, err = _buf.ReadShort(); err != nil { err = errors.New("_v.X3 error"); return } }
    { if _v.X4, err = _buf.ReadInt(); err != nil { err = errors.New("_v.X4 error"); return } }
    { if _v.X5, err = _buf.ReadLong(); err != nil { err = errors.New("_v.X5 error"); return } }
    { if _v.X6, err = _buf.ReadFloat(); err != nil { err = errors.New("_v.X6 error"); return } }
    { if _v.X7, err = _buf.ReadDouble(); err != nil { err = errors.New("_v.X7 error"); return } }
    { if _v.S1, err = _buf.ReadString(); err != nil { err = errors.New("_v.S1 error"); return } }
    { if _, err = _buf.ReadString(); err != nil { return }; if _v.S2, err = _buf.ReadString(); err != nil { err = errors.New("_v.S2 error"); return } }
    { if _v.V2, err = _buf.ReadVector2(); err != nil { err = errors.New("_v.V2 error"); return } }
    { if _v.V3, err = _buf.ReadVector3(); err != nil { err = errors.New("_v.V3 error"); return } }
    { if _v.V4, err = _buf.ReadVector4(); err != nil { err = errors.New("_v.V4 error"); return } }
    { if _v.T1, err = _buf.ReadInt(); err != nil { err = errors.New("_v.T1 error"); return } }
    return
}

func DeserializeTestDemoPrimitiveTypesTable(_buf *serialization.ByteBuf) (*TestDemoPrimitiveTypesTable, error) {
    v := &TestDemoPrimitiveTypesTable{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
