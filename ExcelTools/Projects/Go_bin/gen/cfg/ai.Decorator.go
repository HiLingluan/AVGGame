
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type AiDecorator struct {
    Id int32
    NodeName string
    FlowAbortMode int32
}

const TypeId_AiDecorator = 2017109461

func (*AiDecorator) GetTypeId() int32 {
    return 2017109461
}

func (_v *AiDecorator)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *AiDecorator)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.Id, err = _buf.ReadInt(); err != nil { err = errors.New("_v.Id error"); return } }
    { if _v.NodeName, err = _buf.ReadString(); err != nil { err = errors.New("_v.NodeName error"); return } }
    { if _v.FlowAbortMode, err = _buf.ReadInt(); err != nil { err = errors.New("_v.FlowAbortMode error"); return } }
    return
}

func DeserializeAiDecorator(_buf *serialization.ByteBuf) (interface{}, error) {
    var id int32
    var err error
    if id, err = _buf.ReadInt() ; err != nil {
        return nil, err
    }
    switch id {
        case -513308166: _v := &AiUeLoop{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeLoop") } else { return _v, nil }
        case -951439423: _v := &AiUeCooldown{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeCooldown") } else { return _v, nil }
        case 338469720: _v := &AiUeTimeLimit{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeTimeLimit") } else { return _v, nil }
        case -315297507: _v := &AiUeBlackboard{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeBlackboard") } else { return _v, nil }
        case 195054574: _v := &AiUeForceSuccess{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.UeForceSuccess") } else { return _v, nil }
        case 1255972344: _v := &AiIsAtLocation{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.IsAtLocation") } else { return _v, nil }
        case -1207170283: _v := &AiDistanceLessThan{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.DistanceLessThan") } else { return _v, nil }
        default: return nil, errors.New("unknown type id")
    }
}

