
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg

import (
    "luban_examples/go_bin/bright/serialization"
)

import "errors"

type AiKeyData struct {
}

const TypeId_AiKeyData = 1022478019

func (*AiKeyData) GetTypeId() int32 {
    return 1022478019
}

func (_v *AiKeyData)Serialize(_buf *serialization.ByteBuf) {
    // not support
}

func (_v *AiKeyData)Deserialize(_buf *serialization.ByteBuf) (err error) {
    return
}

func DeserializeAiKeyData(_buf *serialization.ByteBuf) (interface{}, error) {
    var id int32
    var err error
    if id, err = _buf.ReadInt() ; err != nil {
        return nil, err
    }
    switch id {
        case -719747885: _v := &AiFloatKeyData{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.FloatKeyData") } else { return _v, nil }
        case -342751904: _v := &AiIntKeyData{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.IntKeyData") } else { return _v, nil }
        case -307888654: _v := &AiStringKeyData{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.StringKeyData") } else { return _v, nil }
        case 1517269500: _v := &AiBlackboardKeyData{}; if err = _v.Deserialize(_buf); err != nil { return nil, errors.New("ai.BlackboardKeyData") } else { return _v, nil }
        default: return nil, errors.New("unknown type id")
    }
}

