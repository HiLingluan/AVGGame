// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ErrorErrorStyleDlgOk : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ErrorErrorStyleDlgOk GetRootAsErrorErrorStyleDlgOk(ByteBuffer _bb) { return GetRootAsErrorErrorStyleDlgOk(_bb, new ErrorErrorStyleDlgOk()); }
  public static ErrorErrorStyleDlgOk GetRootAsErrorErrorStyleDlgOk(ByteBuffer _bb, ErrorErrorStyleDlgOk obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ErrorErrorStyleDlgOk __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string BtnName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBtnNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetBtnNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetBtnNameArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<cfg.ErrorErrorStyleDlgOk> CreateErrorErrorStyleDlgOk(FlatBufferBuilder builder,
      StringOffset btn_nameOffset = default(StringOffset)) {
    builder.StartTable(1);
    ErrorErrorStyleDlgOk.AddBtnName(builder, btn_nameOffset);
    return ErrorErrorStyleDlgOk.EndErrorErrorStyleDlgOk(builder);
  }

  public static void StartErrorErrorStyleDlgOk(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddBtnName(FlatBufferBuilder builder, StringOffset btnNameOffset) { builder.AddOffset(0, btnNameOffset.Value, 0); }
  public static Offset<cfg.ErrorErrorStyleDlgOk> EndErrorErrorStyleDlgOk(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<cfg.ErrorErrorStyleDlgOk>(o);
  }
};


}
