// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct TestSepBean1 : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static TestSepBean1 GetRootAsTestSepBean1(ByteBuffer _bb) { return GetRootAsTestSepBean1(_bb, new TestSepBean1()); }
  public static TestSepBean1 GetRootAsTestSepBean1(ByteBuffer _bb, TestSepBean1 obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TestSepBean1 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int A { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int B { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string C { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetCBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<cfg.TestSepBean1> CreateTestSepBean1(FlatBufferBuilder builder,
      int a = 0,
      int b = 0,
      StringOffset cOffset = default(StringOffset)) {
    builder.StartTable(3);
    TestSepBean1.AddC(builder, cOffset);
    TestSepBean1.AddB(builder, b);
    TestSepBean1.AddA(builder, a);
    return TestSepBean1.EndTestSepBean1(builder);
  }

  public static void StartTestSepBean1(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddA(FlatBufferBuilder builder, int a) { builder.AddInt(0, a, 0); }
  public static void AddB(FlatBufferBuilder builder, int b) { builder.AddInt(1, b, 0); }
  public static void AddC(FlatBufferBuilder builder, StringOffset cOffset) { builder.AddOffset(2, cOffset.Value, 0); }
  public static Offset<cfg.TestSepBean1> EndTestSepBean1(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<cfg.TestSepBean1>(o);
  }
};


}
