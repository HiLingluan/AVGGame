// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct TestDemoE2 : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static TestDemoE2 GetRootAsTestDemoE2(ByteBuffer _bb) { return GetRootAsTestDemoE2(_bb, new TestDemoE2()); }
  public static TestDemoE2 GetRootAsTestDemoE2(ByteBuffer _bb, TestDemoE2 obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TestDemoE2 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Y1 { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Y2 { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<cfg.TestDemoE2> CreateTestDemoE2(FlatBufferBuilder builder,
      int y1 = 0,
      bool y2 = false) {
    builder.StartTable(2);
    TestDemoE2.AddY1(builder, y1);
    TestDemoE2.AddY2(builder, y2);
    return TestDemoE2.EndTestDemoE2(builder);
  }

  public static void StartTestDemoE2(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddY1(FlatBufferBuilder builder, int y1) { builder.AddInt(0, y1, 0); }
  public static void AddY2(FlatBufferBuilder builder, bool y2) { builder.AddBool(1, y2, false); }
  public static Offset<cfg.TestDemoE2> EndTestDemoE2(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<cfg.TestDemoE2>(o);
  }
};


}
