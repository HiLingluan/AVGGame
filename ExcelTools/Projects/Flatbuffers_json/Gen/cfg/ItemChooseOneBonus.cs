// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ItemChooseOneBonus : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ItemChooseOneBonus GetRootAsItemChooseOneBonus(ByteBuffer _bb) { return GetRootAsItemChooseOneBonus(_bb, new ItemChooseOneBonus()); }
  public static ItemChooseOneBonus GetRootAsItemChooseOneBonus(ByteBuffer _bb, ItemChooseOneBonus obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ItemChooseOneBonus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int DropId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsUnique { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<cfg.ItemChooseOneBonus> CreateItemChooseOneBonus(FlatBufferBuilder builder,
      int drop_id = 0,
      bool is_unique = false) {
    builder.StartTable(2);
    ItemChooseOneBonus.AddDropId(builder, drop_id);
    ItemChooseOneBonus.AddIsUnique(builder, is_unique);
    return ItemChooseOneBonus.EndItemChooseOneBonus(builder);
  }

  public static void StartItemChooseOneBonus(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDropId(FlatBufferBuilder builder, int dropId) { builder.AddInt(0, dropId, 0); }
  public static void AddIsUnique(FlatBufferBuilder builder, bool isUnique) { builder.AddBool(1, isUnique, false); }
  public static Offset<cfg.ItemChooseOneBonus> EndItemChooseOneBonus(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<cfg.ItemChooseOneBonus>(o);
  }
};


}
