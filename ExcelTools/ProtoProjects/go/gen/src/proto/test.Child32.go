
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package proto

import (
    "bright/serialization"
)

import "errors"

type TestChild32 struct {
    A1 int32
    A24 int32
    B31 int32
    B32 int32
}

const TypeId_TestChild32 = 11

func (*TestChild32) GetTypeId() int32 {
    return 11
}

func (_v *TestChild32)Serialize(_buf *serialization.ByteBuf) {
    _buf.WriteInt(_v.A1)
    _buf.WriteInt(_v.A24)
    _buf.WriteInt(_v.B31)
    _buf.WriteInt(_v.B32)
}

func (_v *TestChild32)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.A1, err = _buf.ReadInt(); err != nil { err = errors.New("_v.A1 error"); return } }
    { if _v.A24, err = _buf.ReadInt(); err != nil { err = errors.New("_v.A24 error"); return } }
    { if _v.B31, err = _buf.ReadInt(); err != nil { err = errors.New("_v.B31 error"); return } }
    { if _v.B32, err = _buf.ReadInt(); err != nil { err = errors.New("_v.B32 error"); return } }
    return
}

func SerializeTestChild32(_v serialization.ISerializable, _buf *serialization.ByteBuf) {
    _v.Serialize(_buf)
}

func DeserializeTestChild32(_buf *serialization.ByteBuf) (*TestChild32, error) {
    v := &TestChild32{}
    if err := v.Deserialize(_buf); err == nil {
        return v, nil
    } else {
        return nil, err
    }
}
