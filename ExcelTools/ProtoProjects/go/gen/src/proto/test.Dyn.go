
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package proto

import (
    "bright/serialization"
)

import "errors"

type TestDyn struct {
    A1 int32
}

const TypeId_TestDyn = 0

func (*TestDyn) GetTypeId() int32 {
    return 0
}

func (_v *TestDyn)Serialize(_buf *serialization.ByteBuf) {
    _buf.WriteInt(_v.A1)
}

func (_v *TestDyn)Deserialize(_buf *serialization.ByteBuf) (err error) {
    { if _v.A1, err = _buf.ReadInt(); err != nil { err = errors.New("_v.A1 error"); return } }
    return
}

func SerializeTestDyn(_v interface{}, _buf *serialization.ByteBuf) {
    _b := _v.(serialization.ISerializable)
    _buf.WriteInt(_b.GetTypeId())
    _b.Serialize(_buf)
}

func DeserializeTestDyn(_buf *serialization.ByteBuf) (_v serialization.ISerializable, err error) {
    var id int32
    if id, err = _buf.ReadInt() ; err != nil {
        return
    }
    switch id {
        case 1: _v = &TestChild2{}; if err = _v.Deserialize(_buf); err != nil { return nil, err } else { return }
        case 10: _v = &TestChild31{}; if err = _v.Deserialize(_buf); err != nil { return nil, err } else { return }
        case 11: _v = &TestChild32{}; if err = _v.Deserialize(_buf); err != nil { return nil, err } else { return }
        default: return nil, errors.New("unknown type id")
    }
}
