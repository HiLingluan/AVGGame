// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

apply plugin: 'com.android.application'

dependencies {
    implementation "androidx.multidex:multidex:2.0.0"
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'

    // Add the Firebase Crashlytics SDK. 检测崩溃sdk必须集成在主工程
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'

    // required to avoid crash on Android 12 API 31
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation project(':unityLibrary')
}

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILD_TOOLS_VERSION

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'com.maplehouse.gp.magic'
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
//        versionCode Integer.parseInt(VERSION_CODE)
//        versionName VERSION_NAME
        versionCode 12
        versionName "104.0.0"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        multiDexEnabled = true
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb','.xxxx', 'build_info.txt','.sdfsdf', 'bundles/manifest.dat']
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    lintOptions {
        abortOnError false
    }

    //signingConfigs 需要写在defaultConfig 和buildTypes 前面，不然会编译报错。
    signingConfigs{
        release{
            storeFile file('/Users/zhangzhen/Jenkins/JenkinsConfig/PWK_android_keystore/cms_keystore_100701.keystore')
            storePassword 'StqylkzUp6zes'
            keyAlias 'cms_keystore_100701'
            keyPassword 'StqylkzUp6zes'
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }



    //对生成的apk文件的名字和路径改到其他地方
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if(JENKINS == "true")
            {
                variant.getPackageApplicationProvider().get().outputDirectory = new File(OUTPUT_PATH)
                outputFileName = APK_NAME
            }
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
        doNotStrip '*/arm64-v8a/*.so'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}

//添加gms服务
apply plugin: 'com.google.gms.google-services'
// 添加firebase崩溃监控
apply plugin: 'com.google.firebase.crashlytics'